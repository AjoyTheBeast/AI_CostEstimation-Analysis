@using ACE_App.Models
@model ACEModel

@{
    Layout = "~/Pages/Shared/_Layout.cshtml";
    ViewBag.Title = "ACE Home";
}

<style>
    .form-control {
        border-radius: 8px;
        border: 1px solid #ced4da;
        padding: 10px;
        width: 100%;
    }

    textarea.form-control {
        resize: none;
    }

    textarea.history-box {
        resize: none;
        height: 300px;
        margin-bottom: 20px;
        background-color: #f8f9fa;
        border: 1px solid #ced4da;
        width: 100%;
        overflow-y: scroll; /* Enable scrolling */
    }

    .chat-container {
        position: relative;
        overflow-y: hidden;
        height: 300px;
    }


    .label-left {
        font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
        padding: 10px;
    }

    .row {
        padding: 2px;
        margin: 2px;
    }

    .panel {
        border-radius: 8px;
        margin-bottom: 10px;
        border: 1px solid #ddd;
    }

    .panel-heading {
        background-color: cornflowerblue;
        color: white;
        padding: 10px;
        padding-bottom: 10px;
        border-radius: 8px 8px 8px 8px;
    }

    .panel-title {
        margin-top: 0;
        margin-bottom: 0;
        font-size: 18px;
    }

    .btn-custom {
        background-color: #6c757d;
        border: none;
        border-radius: 8px;
        padding: 10px 20px;
        font-weight: bold;
        color: white;
    }

        .btn-custom:hover {
            opacity: 0.8;
        }

    .input-group {
        width: 100%;
        position: relative;
    }

    textarea.form-control.curved-box {
        border-radius: 8px;
        padding-right: 50px;
    }

    .final-cost-label {
        font-weight: bold;
        margin-top: 20px;
        font-size: 18px;
        margin-bottom: 10px;
    }

    /* Chat History Formatting */
    .chat-history {
        white-space: pre-wrap;
    }
</style>

@using (Html.BeginForm("Create", "ACE", FormMethod.Post, new { @class = "aceForm", id = "ace-Form" }))

{
    <!-- AI Cost Estimation Heading -->
    <div class="panel panel-primary">
        <div class="panel-heading">
            <h4 class="panel-title"><b>AI Cost Estimation</b></h4>
        </div>
    </div>

    <!-- Search History text box -->
    <div class="row">
        <div class="input-group">
            <div class="col-md-12">

                @Html.TextAreaFor(model => model.History, new { @class = "form-control history-box chat-history", rows = "10", placeholder = "Chat history will appear here...", @readonly = "readonly" })
            </div>
        </div>
    </div>

    <!-- Basic Search Text Area -->
    <div class="row">
        <div class="col-md-2 label-left">Give high-level Project Description</div>
        <div class="col-md-9">

            @Html.TextAreaFor(model => model.UserInput, new { @class = "form-control curved-box", id = "user-Input", rows = "4", placeholder = "I want to create a banking app such that...", Style = "min-width:100%;resize:none;height:120px;" })
        </div>
    </div>

    <div class="row">
        <div class="col-md-6 text-left">
            <a href="@Url.Action("GeneratePdf", "ACE", new {})" class="btn btn-custom">Generate PDF</a>
        </div>

        <div class="col-md-6 text-right">
            <button type="submit" class="btn btn-custom" style="margin-right: 10px;">Submit</button>
            <a href="javascript:void(0)" id="resetButton" class="btn btn-custom" onclick="clearSearch()">Reset</a>
        </div>
    </div>

    <!-- Final Cost Estimation Label -->
    <div class="row">
        <div class="col-md-12">
            <div class="final-cost-label">
                <strong>The Final Cost Estimation for Project:</strong> <label id="finalCostLabel">@Html.DisplayFor(model => model.MLOutput)</label>
            </div>
        </div>
    </div>

    

}

<script type="text/javascript">
    $('#ace-Form').on("submit", handleApiResponse);
// Fetch response from API
    function handleApiResponse(event) {
        event.preventDefault();

        var userInput = document.getElementById("user-Input").value;

        var aceData = {
            UserInput: userInput
        }

        fetch("/ACE/Create", {
            method: "POST",
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(aceData)
        })
            .then(response => response.json())
            .then(data => {
                updateChatHistory(data.history);
                updateFinalCostEstimation(data.status, data.mlOutput);
                clearUserInput();  // Clear the input box after submission
            })
            .catch(err => console.log(err));
    }

    // update chat history with spacing between User and AI messages
    function updateChatHistory(content) {
        let currentHistory = "";

        content.forEach((msg, index) => {
            if (index % 2 === 0) {
                currentHistory += "User: " + msg + "\n\n";  // Adding extra space between User and AI
            } else {
                currentHistory += "AI: " + msg + "\n\n";
            }
        });

        $('#History').val(currentHistory.trim());

        var historyBox = document.getElementById("History");
        historyBox.scrollTop = historyBox.scrollHeight;
    }

    // clear the input field
    function clearUserInput() {
        $('#user-Input').val('');  // Clear the basic search text box
    }

    //  update the final cost estimation label based on status
    function updateFinalCostEstimation(status, mlOutput) {
        if (status === true) {
            $('#finalCostLabel').text(mlOutput);  // Show ML Output when status is true
        } else {
            $('#finalCostLabel').text("");
        }
    }

    //  clear search and reset chat history and cost estimation
    function clearSearch() {
        // Clear the chat history
        $('#History').val('');

        // Clear the final cost estimation label
        $('#finalCostLabel').text('');

        // Clear the input field (if needed when reset is clicked)
        $('#user-Input').val('');
    }

    //   press Enter and submit the form
    $(document).on('keypress', function (e) {
        if (e.which === 13) {  // 13 is the Enter key
            $('#ace-Form').submit();  // Submit the form
        }
    });
</script>
